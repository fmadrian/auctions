networks:
  custom_network: # Network name.
    ipam: # IP Address Manager (ipam).
      config:
        - subnet: 10.5.0.0/16 # Range of addresses a container/service inside the network might have.
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=123
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      custom_network:
  mongodbservice:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
    networks:
      custom_network:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom_network:
  auction-service:
    image: fsv2860/auction-service:latest
    build: # build context
      context: . # . context is inside root (auctions) directory
      dockerfile: src/AuctionService/Dockerfile
    environment: # overwrites appsettings.json
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - ASPNETCORE_URLS=http://+:7777 # internal URL our Kestrel server will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=123;Database=auctions # ConnectionStrings.DefaultConnection | server=postgres postgres refers to the name of the service
      - IdentityServiceUrl=http://identity-service
      - Kestrel__Endpoints__Grpc__Protocols=Http2 # Kestrel server gRPC configuration
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1.
      - Kestrel__Endpoints__WebApi__Url=http://+:7777.
    ports:
      - 7001:80 #  expose web api (source_port:docker_port)
      - 7777:7777 # expose kestrel server
    depends_on:
      - postgres # postgres service defined above
      - rabbitmq # rabbitmq service defined above
    networks:
      custom_network:
  search-service:
    image: fsv2860/search-service:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__MongoDbConnection=mongodb://root:123@mongodbservice # @mongodbservice refers to the service (defined above).
      - AuctionServiceUrl="http://auction-service"
    ports:
      - 7002:80
    depends_on:
      - mongodbservice
      - rabbitmq # rabbitmq service defined above
    networks:
      custom_network:
  identity-service:
    image: fsv2860/identity-service:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - ClientApp=http://app.auctions.com
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=123;Database=identity
      # Virtual host address
      - VIRTUAL_HOST=id.auctions.com
    depends_on:
      - postgres
    networks:
      custom_network:
        ipv4_address: 10.5.0.200 # Static address service/container will have inside the network.
  gateway-service:
    image: fsv2860/gateway-service:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker # reads from appsettings.Docker.json
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      # IMPORTANT: By default, browsers attempt to access this address using 'https' (change it to 'http').
      - ClientApp=http://app.auctions.com # URL the browser will try to enter from. Must match the web application's VIRTUAL_HOST.
      - VIRTUAL_HOST=api.auctions.com
    networks:
      custom_network:
  bidding-service:
    image: fsv2860/bidding-service:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__MongoDbConnection=mongodb://root:123@mongodbservice # @mongodbservice refers to the service (defined above).
      - IdentityServiceUrl=http://identity-service
      - GrpcAuction=http://auction-service:7777 # gRPC connection.
    ports:
      - 7003:80
    depends_on:
      - mongodbservice
      - rabbitmq # rabbitmq service defined above
    networks:
      custom_network:
  notification-service:
    image: fsv2860/notification-service:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
    ports:
      - 7004:80
    depends_on:
      - rabbitmq # rabbitmq service defined above
    networks:
      custom_network:
  web-app:
    image: fsv2860/auctions-webapp
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - webappdata:/var/lib/web/data # Web app needs a volume.
    extra_hosts:
      - id.auctions.com:10.5.0.200 # host:static_ip_address.
    environment:
      # 1. NextAuth default variables
      - NEXTAUTH_SECRET=DzKO3FbjwvIJg5o1XW7bPTR5Ym72sXzY
      # 1.1. Split NEXTAUTH_URL into internal and external.
      - NEXTAUTH_URL=http://app.auctions.com # URL used by browser / web application.
      - NEXTAUTH_URL_INTERNAL_URL=http://web-app:3000 # URL used internally by other Docker services.
      # 2. Server side variables.
      - API_URL=http://gateway-service/
      - ID_URL=http://id.auctions.com # Identity Service address defined inside 'hosts' file.
      # Client side variables.
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-service/notifications
      # Virtual host address and virtual port.
      - VIRTUAL_HOST=app.auctions.com
      - VIRTUAL_PORT=3000
    networks:
      custom_network:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
    networks:
      custom_network:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
volumes:
  pgdata:
  mongodata:
  webappdata:
