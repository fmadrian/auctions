services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=123
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  mongodbservice:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  auction-service:
    image: fsv2860/auction-service:latest
    build: # build context
      context: . # . context is inside root (auctions) directory
      dockerfile: src/AuctionService/Dockerfile
    environment: # overwrites appsettings.json
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - ASPNETCORE_URLS=http://+:7777 # internal URL our Kestrel server will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=123;Database=auctions # ConnectionStrings.DefaultConnection | server=postgres postgres refers to the name of the service
      - IdentityServiceUrl=http://identity-service
      - Kestrel__Endpoints__Grpc__Protocols=Http2 # Kestrel server gRPC configuration
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1.
      - Kestrel__Endpoints__WebApi__Url=http://+:7777.
    ports:
      - 7001:80 #  expose web api (source_port:docker_port)
      - 7777:7777 # expose kestrel server
    depends_on:
      - postgres # postgres service defined above
      - rabbitmq # rabbitmq service defined above
  search-service:
    image: fsv2860/search-service:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__MongoDbConnection=mongodb://root:123@mongodbservice # @mongodbservice refers to the service (defined above).
      - AuctionServiceUrl="http://auction-service"
    ports:
      - 7002:80
    depends_on:
      - mongodbservice
      - rabbitmq # rabbitmq service defined above
  identity-service:
    image: fsv2860/identity-service:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=123;Database=identity
    ports:
      - 5000:80
    depends_on:
      - postgres
  gateway-service:
    image: fsv2860/gateway-service:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker # reads from appsettings.Docker.json
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
    ports:
      - 6001:80
  bidding-service:
    image: fsv2860/bidding-service:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
      - ConnectionStrings__MongoDbConnection=mongodb://root:123@mongodbservice # @mongodbservice refers to the service (defined above).
      - IdentityServiceUrl=http://identity-service
      - GrpcAuction=http://auction-service:7777 # gRPC connection.
    ports:
      - 7003:80
    depends_on:
      - mongodbservice
      - rabbitmq # rabbitmq service defined above
  notification-service:
    image: fsv2860/notification-service:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80 # internal URL our service/application will run on.
      - RabbitMq__Host=rabbitmq # RabbitMq_Host = RabbitMq.Host | rabbitMq = name of the service (defined above).
    ports:
      - 7004:80
    depends_on:
      - rabbitmq # rabbitmq service defined above
  web-app:
    image: fsv2860/auctions-webapp:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - webappdata:/var/lib/web/data # Web app needs a volume.
    ports:
      - 3000:3000
    environment:
      - NEXTAUTH_SECRET=DzKO3FbjwvIJg5o1XW7bPTR5Ym72sXzY
      - NEXTAUTH_URL=http://web-app
      # Server side variables.
      - API_URL=http://gateway-service/
      - ID_URL=http://identity-service
      # Client side variables.
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-service/notifications

volumes:
  pgdata:
  mongodata:
  webappdata:
